Our proposal for the Net Computing course is to build a distributed key-value cache in Java.
The concept is based on memcached, which is a high performance distributed key-value store,
but our project will be more academic, simply to explore the concepts that can be used when
making such an application. One cool aspect of this idea, is that it can be scaled to be as
complex as we want. This will be our milestones:

* Working program for single machine.
* Client/server implementation.
* P2P implementation with fixed configuration - target for this course
* P2P with dynamic configuration (hot-swappable machines) - if time permits
* P2P with dynamic configuration, which transfers cache data on machine swap - if time permits

The interface will simply be an HTTP socket with two commands: get (key) and post (key, value).
There is no guarantee that previously stored data will be available later, which makes it easier
to do hot swapping of machines. In fact, a valid implementation would simply return nothing,
whatever happens.

Roan Kattouw, Roy Triesscheijn, Jan Paul Posma